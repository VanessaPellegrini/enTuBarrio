@import '../src/assets/sass/import.scss';
// #189AA7
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$enTuBarrio-primary: mat-palette($mat-green, 600);
$enTuBarrio-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$enTuBarrio-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$enTuBarrio-theme: mat-light-theme($enTuBarrio-primary, $enTuBarrio-accent, $enTuBarrio-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($enTuBarrio-theme);

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.header-user {
    grid-area: header;
    background-color: #612112;
    display: flex;
    justify-content: space-between;
    color: #fff;
    align-items: center;
    button{
        background: #fff!important;
    }
    padding: 0 30px;
}
.grid-container {
    display: grid;
    grid-template-columns: 1fr;
    //grid-template-rows: 50px 1fr 50px;
    grid-template-areas:
        'header'
        'main'
        'footer';
    height: 100vh;
}

/*main*/
.main {
    grid-area: main;
    background-color: #FFF;
}
/*footer*/
.footer {
    grid-area: footer;
    @include headerFooter;
}

.product-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 50px 20px;
  }
  
  .container {
    width: 100%;
    padding-right: 0px;
    padding-left: 0px;
    margin-right: auto;
    margin-left: auto;
  }
  
  @media (min-width: 576px) {
    .product-grid {
      grid-template-columns: repeat(3, 1fr);
    }
    .container {
      max-width: 1110px;
      padding: 30px;
    }
  }
